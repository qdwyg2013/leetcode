//给定一个整数数组，判断是否存在重复元素。 
//
// 如果任意一值在数组中出现至少两次，函数返回 true 。如果数组中每个元素都不相同，则返回 false 。 
//
// 
//
// 示例 1: 
//
// 输入: [1,2,3,1]
//输出: true 
//
// 示例 2: 
//
// 输入: [1,2,3,4]
//输出: false 
//
// 示例 3: 
//
// 输入: [1,1,1,3,3,4,3,2,4,2]
//输出: true 
// Related Topics 数组 哈希表 
// 👍 276 👎 0

package com.leetcode.editor.cn;

import java.util.*;

/**
 * java:[217]存在重复元素
 */
public class P217ContainsDuplicate {

    public static void main(String[] args) {
        Solution solution = new P217ContainsDuplicate().new Solution();
        // TO TEST
        int[] nums = new int[]{-24500,-24499,-24498,-24497,-24496,-24495,-24494,-24493,-24492,-24491,-24490,-24489,-24488,-24487,-24486,-24485,-24484,-24483,-24482,-24481,-24480,-24479,-24478,-24477,-24476,-24475,-24474,-24473,-24472,-24471,-24470,-24469,-24468,-24467,-24466,-24465,-24464,-24463,-24462,-24461,-24460,-24459,-24458,-24457,-24456,-24455,-24454,-24453,-24452,-24451,-24450,-24449,-24448,-24447,-24446,-24445,-24444,-24443,-24442,-24441,-24440,-24439,-24438,-24437,-24436,-24435,-24434,-24433,-24432,-24431,-24430,-24429,-24428,-24427,-24426,-24425,-24424,-24423,-24422,-24421,-24420,-24419,-24418,-24417,-24416,-24415,-24414,-24413,-24412,-24411,-24410,-24409,-24408,-24407,-24406,-24405,-24404,-24403,-24402,-24401,-24400,-24399,-24398,-24397,-24396,-24395,-24394,-24393,-24392,-24391,-24390,-24389,-24388,-24387,-24386,-24385,-24384,-24383,-24382,-24381,-24380,-24379,-24378,-24377,-24376,-24375,-24374,-24373,-24372,-24371,-24370,-24369,-24368,-24367,-24366,-24365,-24364,-24363};
        System.out.println(solution.containsDuplicate(nums));
    }

    //leetcode submit region begin(Prohibit modification and deletion)
    class Solution {
        public boolean containsDuplicate(int[] nums) {

//            // 方法一
//            Arrays.sort(nums);
//            for (int i = 0; i < nums.length - 1; i++) {
//                if (nums[i] == nums[i + 1]) {
//                    return true;
//                }
//            }
//            return false;

            // 方法二
            Set set = new HashSet(nums.length);
            for (int num : nums) {
                if (!set.add(num)) {
                    return true;
                }
            }
            return false;
        }
    }
//leetcode submit region end(Prohibit modification and deletion)

}